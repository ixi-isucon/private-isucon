AWSTemplateFormatVersion: "2010-09-09"
Description: private-isu template

Parameters:
  KeyPairName:
    Description: "Amazon EC2 Key Pair"
    Type: AWS::EC2::KeyPair::KeyName
  # GitHubUsername:
  #   Description: "GitHub Username for SSH public key"
  #   Type: String
  GitHubUsernames:
    Description: "GitHub Usernames for SSH public key (comma separated)"
    Type: String
    Default: "lirlia,kotaroyamazaki,tsuba3"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "192.168.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "192.168.1.0/24"
      AvailabilityZone: ap-northeast-1a

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          CidrIp: 192.168.0.0/16

  ServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: "isucon1"
      InstanceType: c7g.large
      KeyName: !Ref KeyPairName
      ImageId: ami-0bed62bba4100a4b7
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref MySubnet
          PrivateIpAddress: "192.168.1.10"
          GroupSet:
            - !Ref MySecurityGroup
      AvailabilityZone: ap-northeast-1a
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          mkdir -p /home/isucon/.ssh
          chown -R isucon:isucon /home/isucon/.ssh
          touch /home/isucon/.ssh/authorized_keys
          chmod 600 /home/isucon/.ssh/authorized_keys

          echo ${GitHubUsernames} | tr "," "\n" | while read GITHUB_USER; do
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
          done

  ServerInstance2:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: "isucon2"
      InstanceType: c7g.large
      KeyName: !Ref KeyPairName
      ImageId: ami-0bed62bba4100a4b7
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref MySubnet
          PrivateIpAddress: "192.168.1.11"
          GroupSet:
            - !Ref MySecurityGroup
      AvailabilityZone: ap-northeast-1a
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          mkdir -p /home/isucon/.ssh
          chown -R isucon:isucon /home/isucon/.ssh
          touch /home/isucon/.ssh/authorized_keys
          chmod 600 /home/isucon/.ssh/authorized_keys

          echo ${GitHubUsernames} | tr "," "\n" | while read GITHUB_USER; do
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
          done

  ServerInstance3:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: "isucon3"
      InstanceType: c7g.large
      KeyName: !Ref KeyPairName
      ImageId: ami-0bed62bba4100a4b7
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref MySubnet
          PrivateIpAddress: "192.168.1.12"
          GroupSet:
            - !Ref MySecurityGroup
      AvailabilityZone: ap-northeast-1a
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          mkdir -p /home/isucon/.ssh
          chown -R isucon:isucon /home/isucon/.ssh
          touch /home/isucon/.ssh/authorized_keys
          chmod 600 /home/isucon/.ssh/authorized_keys

          echo ${GitHubUsernames} | tr "," "\n" | while read GITHUB_USER; do
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
          done

  BenchmarkerInstance:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: "benchmarker"
      InstanceType: c7g.xlarge
      KeyName: !Ref KeyPairName
      ImageId: ami-034a457f6af55d65d
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref MySubnet
          PrivateIpAddress: "192.168.1.20"
          GroupSet:
            - !Ref MySecurityGroup
      AvailabilityZone: ap-northeast-1a
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          mkdir -p /home/isucon/.ssh
          chown -R isucon:isucon /home/isucon/.ssh
          touch /home/isucon/.ssh/authorized_keys
          chmod 600 /home/isucon/.ssh/authorized_keys

          echo ${GitHubUsernames} | tr "," "\n" | while read GITHUB_USER; do
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
          done
